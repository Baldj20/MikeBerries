// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProductService.DAL;

#nullable disable

namespace ProductService.DAL.Migrations
{
    [DbContext(typeof(MikeBerriesDBContext))]
    [Migration("20251007091659_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProductService.DAL.Entities.Product", b =>
                {
                    b.Property<string>("Article")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<string>("ProviderEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Article");

                    b.HasIndex("ProviderEmail");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ProductService.DAL.Entities.ProductImage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("ProductArticle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("ProductArticle");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("ProductService.DAL.Entities.Provider", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Email");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("ProductService.DAL.Entities.Product", b =>
                {
                    b.HasOne("ProductService.DAL.Entities.Provider", "Provider")
                        .WithMany("Products")
                        .HasForeignKey("ProviderEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("ProductService.DAL.Entities.ProductImage", b =>
                {
                    b.HasOne("ProductService.DAL.Entities.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductArticle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProductService.DAL.Entities.Product", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("ProductService.DAL.Entities.Provider", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
